{"version":3,"sources":["components/PokemonTypes.js","components/PokemonCard.js","components/PokemonList.js","services/GetDataFromServer.js","components/Filter.js","components/PokemonDetail.js","App.js","index.js"],"names":["PokemonTypes","props","types","map","pokemonType","index","className","type","name","key","PokemonCard","to","id","src","picture","alt","charAt","toUpperCase","slice","evolves_from","species","PokemonList","console","log","inputValue","length","pokemons","filter","pokemon","includes","GetDataFromServer","fetch","then","response","json","data","results","pokemonUnformatted","url","evolves_from_species","habitat","shape","evolution_chain","sprites","front_default","heigth","height","weight","Filter","placeholder","onChange","handleInputValue","PokemonDetail","undefined","App","state","bind","renderHomePage","renderDetail","promises","Promise","all","setState","event","inputValueEvent","target","value","this","Fragment","routerProps","chosenPokemon","selectedPokemon","parseInt","match","params","pokemonId","exact","path","render","React","Component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b6ff3d3f.chunk.js","sourcesContent":["import React from \"react\"\n\n\n\nconst PokemonTypes = (props) => {\n    return (\n        props.types.map((pokemonType, index) => {\n            return (\n                <li className={`pokemon__list-item pokemon__${pokemonType.type.name}`} key={index}>{pokemonType.type.name}</li>\n            )\n        })\n    )\n}\n\nexport default PokemonTypes;","import React from \"react\"\nimport { Link } from \"react-router-dom\"\nimport \"../styles/_pokemon-card.scss\"\nimport PokemonTypes from \"./PokemonTypes\"\n\nfunction EvolutionFrom(evolves_from) {\n    if (evolves_from === null) {\n        return (\n            null\n        )\n    } else {\n        return (\n            <p className=\"pokemon__evolution\">Evolves from: <strong>{evolves_from.name.charAt(0).toUpperCase() + evolves_from.name.slice(1)}</strong> </p>\n        )\n    }\n};\n\nconst PokemonCard = (props) => {\n\n    return (\n        <div className=\"pokemon__card\">\n            <Link className=\"pokemon__link\" to={`/pokemon/${props.id}`}>\n                <div className=\"pokemon__preview\">\n                    <img className=\"pokemon__picture\" src={props.picture} alt={props.name} />\n                    <h5 className=\"pokemon__id\">ID/{props.id}</h5>\n                </div>\n                <div className=\"pokemon__name-container\">\n                    <h2 className=\"pokemon__name\">{props.name.charAt(0).toUpperCase() + props.name.slice(1)}</h2>\n                    <ul className=\"pokemon__types-list\"><PokemonTypes types={props.type} /></ul>\n                    <p>{EvolutionFrom(props.species.evolves_from)}</p>\n                </div>\n            </Link>\n        </div>\n    )\n\n};\n\nexport default PokemonCard;","import React from \"react\";\nimport PokemonCard from \"../components/PokemonCard\"\nimport \"../styles/_pokemon-list.scss\"\n\n\n\n\nconst PokemonList = (props) => {\n    console.log(props)\n    if (props.inputValue.length > 1) {\n        return (\n            <ul className=\"pokemon__list-container\">\n                {props.pokemons\n                    .filter(pokemon =>\n                        (pokemon.name.includes(props.inputValue)))\n                    .map((pokemon, index) => {\n                        return (\n                            <PokemonCard key={index} name={pokemon.name} id={pokemon.id} picture={pokemon.picture} type={pokemon.type} species={pokemon.species} />\n                        )\n                    })}\n            </ul>\n        )\n    } else {\n        return (\n            <ul className=\"pokemon__list-container\">\n                {props.pokemons\n                    .slice(0, 25)\n                    .map((pokemon, index) => {\n                        return (\n                            <PokemonCard key={index} pokemons={props.pokemons} name={pokemon.name} id={pokemon.id} picture={pokemon.picture} type={pokemon.type} species={pokemon.species} />\n                        )\n                    })}\n            </ul>\n        )\n    }\n}\n\n\nexport default PokemonList;","function getEvolution(name) {\n    return (\n        fetch(`https://pokeapi.co/api/v2/pokemon-species/${name}`)\n            .then(response => response.json())\n            .then(data => {\n                return ({\n                    evolves_from: data.evolves_from_species,\n                    habitat: data.habitat.name,\n                    shape: data.shape,\n                    evolution_chain: data.evolution_chain.url\n                }\n\n                )\n            }\n            )\n    )\n}\n\nconst GetDataFromServer = () => {\n    const url = \"https://pokeapi.co/api/v2/pokemon/?limit=150\"\n    return (\n        fetch(url)\n            .then(response => response.json())\n            .then(data => {\n                return data.results.map(pokemonUnformatted => {\n                    return (\n                        fetch(pokemonUnformatted.url)\n                            .then(response => response.json())\n                            .then(data => {\n                                return (\n                                    getEvolution(data.name).then(species => {\n                                        return ({\n                                            name: data.name,\n                                            id: data.id,\n                                            picture: data.sprites.front_default,\n                                            type: data.types,\n                                            heigth: data.height,\n                                            weight: data.weight,\n                                            species: species\n                                        })\n                                    })\n                                )\n                            }))\n                })\n            })\n    )\n\n};\n\n\n\nexport default GetDataFromServer;","import React from \"react\";\nimport \"../styles/_filter.scss\"\n\nconst Filter = (props) => {\n    return (\n        <input className=\"pokemon__filter\" type=\"text\" placeholder=\"Search your Pokemon\" onChange={props.handleInputValue} />\n    )\n}\n\n\nexport default Filter;","import React from \"react\";\nimport { Link } from \"react-router-dom\"\nimport PokemonTypes from \"./PokemonTypes\"\nimport \"../styles/_pokemon-detail.scss\"\n\nfunction EvolvesFrom(evolves_from) {\n    if (evolves_from === null) {\n        return (\n            <li className=\"detail__list-item\"></li>\n        )\n    } else {\n        return (\n            <li className=\"detail__list-item\"> <strong>Evolves from: </strong>{evolves_from.name.charAt(0).toUpperCase() + evolves_from.name.slice(1)}</li>\n        )\n    }\n};\n\n/* function EvolvesTo(url) {\n    return (\n        fetch(url)\n            .then(response => response.json())\n            .then(data => {\n                return (\n                    <li>{data.id}</li>\n                )\n            })\n    )\n} */\n\nconst PokemonDetail = props => {\n    console.log(props)\n    if (props.pokemon === undefined) {\n        return (\n            <h1>Cargando...</h1>\n        )\n    } else {\n        return (\n            <div className=\"detail__container\">\n                <h2 className=\"detail__name\">{props.pokemon.name.charAt(0).toUpperCase() + props.pokemon.name.slice(1)}</h2>\n                <img className=\"detail__picture\" src={props.pokemon.picture} alt={props.pokemon.name} />\n                <p className=\"detail__id\">ID: {props.pokemon.id}</p>\n                <PokemonTypes types={props.pokemon.type} />\n                <ul className=\"detail__list\">\n                    <li className=\"detail__list-item\"><strong>Habitat:</strong> {props.pokemon.species.habitat.charAt(0).toUpperCase() + props.pokemon.species.habitat.slice(1)}</li>\n                    <li className=\"detail__list-item\"><strong>Heigth:</strong> {props.pokemon.heigth}'</li>\n                    <li className=\"detail__list-item\"><strong>Weight:</strong> {props.pokemon.weight} lbs</li>\n                    {EvolvesFrom(props.pokemon.species.evolves_from)}\n                </ul>\n                <button className=\"detail__button\">\n                    <Link to=\"/\" className=\"detail__link\"><b className=\"detail__return\">Return</b></Link>\n                </button>\n\n            </div>\n        )\n    }\n}\n\n\nexport default PokemonDetail;","import React from 'react';\nimport { Route, Switch, Link } from \"react-router-dom\"\nimport './styles/_app.scss';\nimport PokemonList from \"./components/PokemonList\"\nimport GetDataFromServer from \"./services/GetDataFromServer\"\nimport Filter from \"./components/Filter\"\nimport PokemonDetail from \"./components/PokemonDetail\"\n\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      pokemons: [],\n      inputValue: \"\"\n    }\n\n    this.handleInputValue = this.handleInputValue.bind(this)\n    this.renderHomePage = this.renderHomePage.bind(this);\n    this.renderDetail = this.renderDetail.bind(this);\n\n\n\n  }\n\n  componentDidMount() {\n    GetDataFromServer()\n      .then((promises) => Promise.all(promises))\n      .then(data => {\n        this.setState({\n          pokemons: data\n        });\n      });\n  }\n\n  handleInputValue(event) {\n    const inputValueEvent = event.target.value;\n    this.setState({\n      inputValue: inputValueEvent\n    })\n    console.log(this.state.pokemons)\n  }\n\n  renderHomePage() {\n    return (\n      <React.Fragment>\n        <Filter\n          handleInputValue={this.handleInputValue} />\n        <PokemonList\n          inputValue={this.state.inputValue}\n          pokemons={this.state.pokemons} />\n      </React.Fragment>\n    )\n  }\n\n  renderDetail(routerProps) {\n    console.log(routerProps)\n    const selectedPokemon = parseInt(routerProps.match.params.pokemonId)\n    let chosenPokemon\n    for (const pokemon of this.state.pokemons) {\n      if (pokemon.id === selectedPokemon) {\n        chosenPokemon = pokemon\n      }\n    }\n    return (\n      <PokemonDetail pokemon={chosenPokemon} />\n    )\n  };\n\n  render() {\n    return (\n      <div className=\"pokemon__container\" >\n        <h1 className=\"pokemon__title\">Pokédex</h1>\n        <Switch>\n          <Route exact path=\"/\" render={this.renderHomePage} />\n          <Route path=\"/pokemon/:pokemonId\" render={this.renderDetail} />\n        </Switch>\n      </div>\n    );\n  };\n\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from \"react-router-dom\"\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <HashRouter>\n        <App />\n    </HashRouter>\n    , document.getElementById('root'));\n\n"],"sourceRoot":""}